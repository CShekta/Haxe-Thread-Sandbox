// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_Main
#include <Main.h>
#endif
#ifndef INCLUDED_Sys
#include <Sys.h>
#endif
#ifndef INCLUDED_cpp_vm_Thread
#include <cpp/vm/Thread.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_io_Input
#include <haxe/io/Input.h>
#endif


void Main_obj::__construct() { }

Dynamic Main_obj::__CreateEmpty() { return new Main_obj; }

hx::ObjectPtr< Main_obj > Main_obj::__new()
{
	hx::ObjectPtr< Main_obj > _hx_result = new Main_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Main_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Main_obj > _hx_result = new Main_obj();
	_hx_result->__construct();
	return _hx_result;
}

void Main_obj::main(){
            	HX_STACK_FRAME("Main","main",0xed0e206e,"Main.main","Main.hx",4,0x087e5c05)
HXLINE(   6)		::haxe::Log_obj::trace(((HX_("",00,00,00,00) + (int)2) + HX_(" hello world",a4,a2,69,30)),hx::SourceInfo(HX_("Main.hx",05,5c,7e,08),6,HX_("Main",59,64,2f,33),HX_("main",39,38,56,48)));
HXLINE(   7)		while(true){
HXLINE(   8)			::haxe::Log_obj::trace(HX_(" what would you like to do?",50,9e,cb,31),hx::SourceInfo(HX_("Main.hx",05,5c,7e,08),8,HX_("Main",59,64,2f,33),HX_("main",39,38,56,48)));
HXLINE(   9)			HX_VARI( ::String,input) = ::Sys_obj::_hx_stdin()->readLine();
HXLINE(  10)			::haxe::Log_obj::trace(input,hx::SourceInfo(HX_("Main.hx",05,5c,7e,08),10,HX_("Main",59,64,2f,33),HX_("main",39,38,56,48)));
HXLINE(  11)			::String _hx_switch_0 = input;
            			if (  (_hx_switch_0==HX_("cook tortillas",e6,09,c4,f4)) ){
HXLINE(  17)				::cpp::vm::Thread_obj::create(::Main_obj::cookTortillas_dyn());
HXDLIN(  17)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==HX_("prepare tacos",a1,f9,01,68)) ){
HXLINE(  13)				::cpp::vm::Thread_obj::create(::Main_obj::prepareTacos_dyn());
HXDLIN(  13)				goto _hx_goto_1;
            			}
            			if (  (_hx_switch_0==HX_("warm tortillas",a3,cf,c2,20)) ){
HXLINE(  15)				::cpp::vm::Thread_obj::create(::Main_obj::warmTortillas_dyn());
HXDLIN(  15)				goto _hx_goto_1;
            			}
            			/* default */{
HXLINE(  19)				::haxe::Log_obj::trace(HX_("I don't know how to do that",f5,8c,0d,1b),hx::SourceInfo(HX_("Main.hx",05,5c,7e,08),19,HX_("Main",59,64,2f,33),HX_("main",39,38,56,48)));
            			}
            			_hx_goto_1:;
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Main_obj,main,(void))

void Main_obj::onThreadCreated(){
            	HX_STACK_FRAME("Main","onThreadCreated",0x8d7ae18a,"Main.onThreadCreated","Main.hx",27,0x087e5c05)
HXLINE(  27)		::haxe::Log_obj::trace(HX_("thread created",92,4e,f9,25),hx::SourceInfo(HX_("Main.hx",05,5c,7e,08),27,HX_("Main",59,64,2f,33),HX_("onThreadCreated",9f,17,d8,3c)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Main_obj,onThreadCreated,(void))

void Main_obj::warmTortillas(){
            	HX_STACK_FRAME("Main","warmTortillas",0x180c7f64,"Main.warmTortillas","Main.hx",31,0x087e5c05)
HXLINE(  32)		::haxe::Log_obj::trace(HX_("warming",bd,a3,22,09),hx::SourceInfo(HX_("Main.hx",05,5c,7e,08),32,HX_("Main",59,64,2f,33),HX_("warmTortillas",39,96,96,3f)));
HXLINE(  33)		::Sys_obj::sleep((int)10);
HXLINE(  34)		::haxe::Log_obj::trace(HX_("warming tortillas done",a7,47,ef,6f),hx::SourceInfo(HX_("Main.hx",05,5c,7e,08),34,HX_("Main",59,64,2f,33),HX_("warmTortillas",39,96,96,3f)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Main_obj,warmTortillas,(void))

void Main_obj::cookTortillas(){
            	HX_STACK_FRAME("Main","cookTortillas",0x3a4a7e81,"Main.cookTortillas","Main.hx",37,0x087e5c05)
HXLINE(  38)		::haxe::Log_obj::trace(HX_("cooking",1a,3f,ee,a6),hx::SourceInfo(HX_("Main.hx",05,5c,7e,08),38,HX_("Main",59,64,2f,33),HX_("cookTortillas",56,95,d4,61)));
HXLINE(  39)		::Sys_obj::sleep((int)10);
HXLINE(  40)		::haxe::Log_obj::trace(HX_("cooking done",48,43,95,0a),hx::SourceInfo(HX_("Main.hx",05,5c,7e,08),40,HX_("Main",59,64,2f,33),HX_("cookTortillas",56,95,d4,61)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Main_obj,cookTortillas,(void))

void Main_obj::prepareTacos(){
            	HX_STACK_FRAME("Main","prepareTacos",0xa56f1728,"Main.prepareTacos","Main.hx",43,0x087e5c05)
HXLINE(  44)		::haxe::Log_obj::trace(HX_("preparing tacos",5e,6e,8a,47),hx::SourceInfo(HX_("Main.hx",05,5c,7e,08),44,HX_("Main",59,64,2f,33),HX_("prepareTacos",f3,71,94,7e)));
HXLINE(  45)		::Sys_obj::sleep((int)30);
HXLINE(  46)		::haxe::Log_obj::trace(HX_("preparing tacos done",84,3d,b3,aa),hx::SourceInfo(HX_("Main.hx",05,5c,7e,08),46,HX_("Main",59,64,2f,33),HX_("prepareTacos",f3,71,94,7e)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Main_obj,prepareTacos,(void))


Main_obj::Main_obj()
{
}

bool Main_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"main") ) { outValue = main_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"prepareTacos") ) { outValue = prepareTacos_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"warmTortillas") ) { outValue = warmTortillas_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cookTortillas") ) { outValue = cookTortillas_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"onThreadCreated") ) { outValue = onThreadCreated_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Main_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Main_obj_sStaticStorageInfo = 0;
#endif

static void Main_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Main_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Main_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Main_obj::__mClass,"__mClass");
};

#endif

hx::Class Main_obj::__mClass;

static ::String Main_obj_sStaticFields[] = {
	HX_HCSTRING("main","\x39","\x38","\x56","\x48"),
	HX_HCSTRING("onThreadCreated","\x9f","\x17","\xd8","\x3c"),
	HX_HCSTRING("warmTortillas","\x39","\x96","\x96","\x3f"),
	HX_HCSTRING("cookTortillas","\x56","\x95","\xd4","\x61"),
	HX_HCSTRING("prepareTacos","\xf3","\x71","\x94","\x7e"),
	::String(null())
};

void Main_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("Main","\x59","\x64","\x2f","\x33");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Main_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Main_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Main_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Main_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Main_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Main_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Main_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

